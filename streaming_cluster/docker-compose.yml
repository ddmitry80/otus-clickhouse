x-configs: &ch-default-configs
  # image: clickhouse/clickhouse-server:25.1
  build: .
  environment:
      TZ: "Europe/Moscow"
  ulimits:
    nproc: 65535
    nofile:
      soft: 262144
      hard: 262144
  networks:
    - ch_replicated
  depends_on:
    - zookeeper
    
services:
  zookeeper:
    image: 'bitnami/zookeeper:3.9.3'
    networks:
      - ch_replicated
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_CLIENT_PORT=2181
      - TZ="Europe/Moscow"
    ports:
      - "2182:2181"
      - "2888:2888"
      - "3888:3888"

  clickhouse1:
    <<: *ch-default-configs
    volumes:
      - ./configs/default_user.xml:/etc/clickhouse-server/users.d/default_user.xml
      - ./configs/z_config.xml:/etc/clickhouse-server/config.d/z_config.xml
      - ./configs/macros_ch1.xml:/etc/clickhouse-server/config.d/macros.xml
      - ./configs/clickhouse-backup.yml:/etc/clickhouse-backup/config.yml
      - ./configs/s3-storage.xml:/etc/clickhouse-server/config.d/s3-storage.xml
      - ./configs/prometheus_ch.xml:/etc/clickhouse-server/config.d/s3-prometheus_ch.xml
    ports:
      - "8002:9000"
      - "9123:8123"
      
  clickhouse2:
    <<: *ch-default-configs
    volumes:
      - ./configs/default_user.xml:/etc/clickhouse-server/users.d/default_user.xml
      - ./configs/z_config.xml:/etc/clickhouse-server/config.d/z_config.xml
      - ./configs/macros_ch2.xml:/etc/clickhouse-server/config.d/macros.xml
      - ./configs/clickhouse-backup.yml:/etc/clickhouse-backup/config.yml
      - ./configs/s3-storage.xml:/etc/clickhouse-server/config.d/s3-storage.xml
      - ./configs/prometheus_ch.xml:/etc/clickhouse-server/config.d/s3-prometheus_ch.xml
    ports:
      - "8003:9000"
      - "9124:8123"
      
  clickhouse3:
    <<: *ch-default-configs
    volumes:
      - ./configs/default_user.xml:/etc/clickhouse-server/users.d/default_user.xml
      - ./configs/z_config.xml:/etc/clickhouse-server/config.d/z_config.xml
      - ./configs/macros_ch3.xml:/etc/clickhouse-server/config.d/macros.xml
      - ./configs/clickhouse-backup.yml:/etc/clickhouse-backup/config.yml
      - ./configs/s3-storage.xml:/etc/clickhouse-server/config.d/s3-storage.xml
      - ./configs/prometheus_ch.xml:/etc/clickhouse-server/config.d/s3-prometheus_ch.xml
    ports:
      - "8004:9000"
      - "9125:8123"

  clickhouse4:
    <<: *ch-default-configs
    volumes:
      - ./configs/default_user.xml:/etc/clickhouse-server/users.d/default_user.xml
      - ./configs/z_config.xml:/etc/clickhouse-server/config.d/z_config.xml
      - ./configs/macros_ch4.xml:/etc/clickhouse-server/config.d/macros.xml
      - ./configs/clickhouse-backup.yml:/etc/clickhouse-backup/config.yml
      - ./configs/s3-storage.xml:/etc/clickhouse-server/config.d/s3-storage.xml
      - ./configs/prometheus_ch.xml:/etc/clickhouse-server/config.d/s3-prometheus_ch.xml
    ports:
      - "8005:9000"
      - "9126:8123"

  nifi:
    image: apache/nifi:1.27.0
    ports:
      - 18443:8443 # Unsecured HTTP Web Port
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=Password123456
      - NIFI_WEB_HTTP_PORT=8443
    volumes:
      - ./nifi/drivers:/opt/nifi/nifi-current/drivers
      - ./nifi/shared-folder:/opt/nifi/nifi-current/ls-target
      # - ./nifi-conf:/opt/nifi/nifi-current/conf
    networks:
      - ch_replicated

  # kafka:
  #   image: apache/kafka:3.8.0
  #   hostname: kafka
  #   container_name: kafka
  #   ports:
  #     - 9092:9092
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #     KAFKA_PROCESS_ROLES: broker,controller
  #     KAFKA_NODE_ID: 1
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:29093
  #     KAFKA_LISTENERS: PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
  #     KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
  #     CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
  #   networks:
  #     - ch_replicated

  kafka1:
    image: confluentinc/cp-kafka:7.8.0
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
    networks:
      - ch_replicated
    environment:
      # KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      # KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      TZ: "Europe/Moscow"
    depends_on:
      - zookeeper

  kafka2:
    image: confluentinc/cp-kafka:7.8.0
    hostname: kafka2
    container_name: kafka2
    ports:
      - "9093:9092"
      - "29093:29092"
    networks:
      - ch_replicated
    environment:
      # KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:19093,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093,DOCKER://host.docker.internal:29093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29092,PLAINTEXT_HOST://localhost:9092
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      # KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      TZ: "Europe/Moscow"
    depends_on:
      - zookeeper

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:v0.7.2
    ports:
      - 8082:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true
    networks:
      - ch_replicated
  
  prometheus:
    image: prom/prometheus:v2.53.4
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    # container_name: prometheus
    # hostname: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    networks:
      - ch_replicated

  grafana:
    image: grafana/grafana:11.5.2-ubuntu
    user: root
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_lib:/var/lib/grafana
      - ./configs/grafana/provisioning/:/etc/grafana/provisioning/
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    networks:
      - ch_replicated


networks:
  ch_replicated:
    driver: bridge

volumes:
  grafana_lib:
  
